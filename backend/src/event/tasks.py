import time

from celery import shared_task
from celery.utils.log import get_task_logger
import os

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "event_afisha.settings")
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"

from event.models import User, Like
from datetime import date
import requests
from pyrogram.errors import FloodWait

logger = get_task_logger(__name__)

from aiogram import Bot  # noqa: E402

# –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = "7517129777:AAFyHsU_fM15AqXQHdBt-e9ytG3JQJXOIqg"

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USERS = ["adbogatov"]

# todo: 1) –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
# todo: 2) –†–µ–∞–ª–∏–∑–≤–æ–≤–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É –∫–æ—Ç–æ—Ä–∞—è –æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–µ–ª–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É (–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è)


from pyrogram import Client  # noqa: E402
from pyrogram.raw.functions.contacts import ResolveUsername  # noqa: E402

BOT_TOKEN = "7517129777:AAFyHsU_fM15AqXQHdBt-e9ytG3JQJXOIqg"
bot = Bot(token=API_TOKEN)

pyrogram_client = Client(
    "bot",
    api_id=6,
    api_hash="eb06d4abfb49dc3eeb1aeb98ae0f581e",
    bot_token=BOT_TOKEN,
    app_version="7.7.2",
    device_model="Lenovo Z6 Lite",
    system_version="11 R",
)


def resolve_username_to_user_id(username: str) -> int | None:
    with pyrogram_client:
        try:
            r = pyrogram_client.invoke(ResolveUsername(username=username))
            if r.users:
                return r.users[0].id
            return None
        except:  # noqa: E722
            return None


@shared_task
def notification_task():
    users = User.objects.all()
    today = date.today()
    for user in users:
        # todo: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –ø–æ –¥–∞—Ç–∞–º –≤—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
        # likes = user.likes
        likes = Like.objects.filter(user=user, value=True, content__date__lte=today)
        print(f"{likes}")
        if likes:
            for like in likes:
                link = f"https://t.me/EventAfishaBot/strelka?startapp={like.content.id}"
                message = (
                    f"üéâ –ü—Ä–∏–≤–µ—Ç!\n–ù–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —É —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ!\nüîó "
                    f"[–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º]({link})\n"
                    f"–ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –∏ –º–æ—Ä–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π! –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è! üòä‚ú®"
                )
                try:
                    chat_id = resolve_username_to_user_id(user.username)
                    payload = {
                        "chat_id": chat_id,
                        "text": message,
                        "parse_mode": "Markdown",
                    }
                    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage?chat_id={chat_id}&text={message}"
                    response = requests.post(url, json=payload)
                    print(f"Response: {response.status_code}, {response.text}")
                    time.sleep(1)
                except FloodWait as e:
                    print(f"FloodWait: –∂–¥—É {e.value} —Å–µ–∫—É–Ω–¥...")
                    time.sleep(e.value)  # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥
                except Exception as ex:
                    print(f"–û—à–∏–±–∫–∞: {ex}")
