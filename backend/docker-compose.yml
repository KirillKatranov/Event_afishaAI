version: "3.4"

services:
  web:
    build:
      context: .
    volumes:
      - ./src:/app
    env_file:
      - environments/web.env
    ports:
      - 8000:8000
    image: web_backend
    depends_on:
      - db
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  bot:
    image: web_backend
    volumes:
      - ./src:/app
    env_file:
      - environments/web.env
    depends_on:
      - web
    restart: unless-stopped
    command: python3 main.py


  db:
    image: timescale/timescaledb:2.15.2-pg13
    hostname: db
    ports:
      - "5532:5432"
    env_file:
      - environments/db.env
    restart: unless-stopped
    volumes:
      - pg_data:/var/lib/postgresql/data

  pgbouncer:
    image: bitnami/pgbouncer:1.21.0
    restart: always
    env_file:
      - environments/pgbouncer.env
    links:
      - db
    depends_on:
      db:
        condition: service_started
    ports:
      - "6432:6432"

  redis:
    image: redis:7.2.3
    restart: unless-stopped
    ports:
      - "6379:6379"

  celery:
    image: web_backend
    user: root
    command: celery -A event_afisha worker -l info
    restart: always
    volumes:
      - ./src:/app
    env_file:
      - environments/web.env
    depends_on:
      - redis

  celery-beat:
    image: web_backend
    command: celery -A event_afisha beat -l info
    restart: always
    volumes:
      - ./src:/app
    env_file:
      - environments/web.env
    depends_on:
      - redis

volumes:
  pg_data:

networks:
  default:
    external:
      name: afisha
